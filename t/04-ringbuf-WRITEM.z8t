>DIAG "---- TESTING BLOCK WRITES ----"
>DIAG "Write 1 byte into start of queue"
>RESET
>INCLUDE "init.asm"
>CODE
main:
    ; load a chunk of memory with some data
    ld hl, 0x0400
    ld a, 0xbb
    ld (hl), a

    ; set up queue state
    ld hl, (kq_addr)
    inc hl
    ld a, 0x00
    ld (hl), a
    inc hl
    ld a, 0x00
    ld (hl), a

    ; call function to write 1 bytes
    ld hl, 0x0400
    push hl
    ld c, 0x01
    push bc

    call rb_writem
    pop de
    pop de

    halt

>INCLUDE "../04-ringbuf.asm"
>RUN
>REG HL 0x0000 "Return code correct"
>MEM 0x0400 "wrote the test data"
0xbb 0x00

>MEM 0x0300 "Queue data copied correctly"
0x0f 0x00 0x01
0xbb 0x00
>CYCLES 1147


>DIAG "Write 8 bytes into start of queue"
>RESET
>INCLUDE "init.asm"
>CODE
main:
    ; load a chunk of memory with some data
    ld hl, 0x0400
    ld a, 0xbb
    ld b, 0x08
loop:
    ld (hl), a
    inc hl
    djnz loop

    ; set up queue state
    ld hl, (kq_addr)
    inc hl
    ld a, 0x00
    ld (hl), a
    inc hl
    ld a, 0x00
    ld (hl), a

    ; call function to write 8 bytes
    ld hl, 0x0400
    push hl
    ld c, 0x08
    push bc

    call rb_writem
    pop de
    pop de

    halt

>INCLUDE "../04-ringbuf.asm"
>RUN
>REG HL 0x0000 "Return code correct"
>MEM 0x0400 "wrote the test data"
0xbb 0xbb 0xbb 0xbb
0xbb 0xbb 0xbb 0xbb
0x00

>MEM 0x0300 "Queue data copied correctly"
0x0f 0x00 0x08
0xbb 0xbb 0xbb 0xbb
0xbb 0xbb 0xbb 0xbb
0x00 0x00 0x00 0x00
0x00 0x00 0x00 0x00
>CYCLES 1959


>DIAG "Write 8 bytes from index 10 wrapping 2 bytes into start"
>RESET
>INCLUDE "init.asm"
>CODE
main:
    ; load a chunk of memory with some data
    ld hl, 0x0400
    ld a, 0xbb
    ld b, 0x08
loop:
    ld (hl), a
    inc hl
    djnz loop

    ; set up queue state
    ld hl, (kq_addr)
    inc hl
    ld a, 0x03
    ld (hl), a
    inc hl
    ld a, 0x0a
    ld (hl), a

    ; call function to write 8 bytes
    ld hl, 0x0400
    push hl
    ld c, 0x08
    push bc

    call rb_writem
    pop de
    pop de

    halt

>INCLUDE "../04-ringbuf.asm"
>RUN
>REG HL 0x0000 "Return code correct"
>MEM 0x0400 "wrote the test data"
0xbb 0xbb 0xbb 0xbb
0xbb 0xbb 0xbb 0xbb
0x00

>MEM 0x0300 "Queue data copied correctly"
0x0f 0x03 0x02
0xbb 0xbb 0x00 0x00
0x00 0x00 0x00 0x00
0x00 0x00 0xbb 0xbb
0xbb 0xbb 0xbb 0xbb
>CYCLES 1766

