>DIAG "---- TESTING READS ----"
>DIAG "Fail to read an empty queue"
>RESET
>INCLUDE "init_16_buf.asm"
>CODE
main:
    call rb_readb           ; call read function

    halt                    ; end the test

>INCLUDE "../04-ringbuf.asm"
>RUN
>REG HL 0xffff "Return code indicates failure"
>MEM 0x100 "Queue status"
0x0f 0x00 0x00
0x00 0x00


>DIAG "Read a queue with one byte"
>RESET
>INCLUDE "init_16_buf.asm"
>CODE
main:
    ld a, 0xaf              ; set byte to read
    ld hl, kq_addr          ; set location
    ld (hl), a              ; load the value

    ld a, 0x01              ; set write pointer value
    ld hl, kq_pwrite        ; set location
    ld (hl), a              ; load the write pointer
    call rb_readb           ; call read function

    halt                    ; end the test

>INCLUDE "../04-ringbuf.asm"
>RUN
>REG HL 0x0000 "Return code indicates success"
>REG C  0xaf "Register C contains the read byte"
>MEM 0x100 "Queue status"
0x0f 0x01 0x01
0xaf 0x00


>DIAG "Read a byte when it wraps around the end"
>RESET
>INCLUDE "init_16_buf.asm"
>CODE
main:
    ; set all bytes in the queue to 0xaf
    ld a, 0xaf
    ld hl, kq_addr
    ld b, 0x10
loop:
    ld (hl), a
    inc hl
    djnz loop

    ; set the write pointer to position zero
    ld hl, kq_pwrite
    ld a, 0x00
    ld (hl), a

    ; set the read pointer to position 0x0f
    ld hl, kq_pread
    ld a, 0x0f
    ld (hl), a

    ; Set byte 0 in the queue to 0xbf
    ld a, 0xbf
    ld hl, kq_addr
    ld (hl), a

    call rb_readb           ; call read function

    halt                    ; end the test

>INCLUDE "../04-ringbuf.asm"
>RUN
>REG HL 0x0000 "Return code indicates success"
>REG C  0xaf "Register C contains the read byte"
>MEM 0x100 "Queue status"
0x0f 0x00 0x00
0xbf 0xaf 0xaf 0xaf
0xaf 0xaf 0xaf 0xaf
0xaf 0xaf 0xaf 0xaf
0xaf 0xaf 0xaf 0xaf

